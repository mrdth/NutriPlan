name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Publish Ziggy Configuration
        run: php artisan ziggy:generate

      - name: Build Assets
        run: npm run build

      - name: Backend Tests
        run: ./vendor/bin/pest --parallel --coverage --coverage-clover=backend-coverage.xml

      - name: Frontend Tests
        run: npm run test:coverage

      - name: Generate Frontend Coverage Report XML
        run: npx vitest run --coverage --reporter=clover

      - name: Calculate Backend Coverage
        id: backend-coverage
        run: |
          COVERAGE=$(grep -Po '<metrics [^>]*statements[^>]*\K(?<=covered=")[^"]*' backend-coverage.xml || echo "0")
          TOTAL=$(grep -Po '<metrics [^>]*statements[^>]*\K(?<=elements=")[^"]*' backend-coverage.xml || echo "1")
          PERCENTAGE=$((COVERAGE * 100 / TOTAL))
          echo "percentage=${PERCENTAGE}" >> $GITHUB_OUTPUT

      - name: Calculate Frontend Coverage
        id: frontend-coverage
        run: |
          COVERAGE=$(grep -Po '<metrics [^>]*statements[^>]*\K(?<=covered=")[^"]*' coverage/clover.xml || echo "0")
          TOTAL=$(grep -Po '<metrics [^>]*statements[^>]*\K(?<=elements=")[^"]*' coverage/clover.xml || echo "1")
          PERCENTAGE=$((COVERAGE * 100 / TOTAL))
          echo "percentage=${PERCENTAGE}" >> $GITHUB_OUTPUT

      - name: Update README with Coverage Badges
        if: github.ref == 'refs/heads/main'
        run: |
          BACKEND_COVERAGE="${{ steps.backend-coverage.outputs.percentage }}"
          FRONTEND_COVERAGE="${{ steps.frontend-coverage.outputs.percentage }}"
          
          BACKEND_COLOR="red"
          if [ "$BACKEND_COVERAGE" -ge 80 ]; then
            BACKEND_COLOR="green"
          elif [ "$BACKEND_COVERAGE" -ge 60 ]; then
            BACKEND_COLOR="yellow"
          elif [ "$BACKEND_COVERAGE" -ge 40 ]; then
            BACKEND_COLOR="orange"
          fi
          
          FRONTEND_COLOR="red"
          if [ "$FRONTEND_COVERAGE" -ge 80 ]; then
            FRONTEND_COLOR="blue"
          elif [ "$FRONTEND_COVERAGE" -ge 60 ]; then
            FRONTEND_COLOR="lightblue"
          elif [ "$FRONTEND_COVERAGE" -ge 40 ]; then
            FRONTEND_COLOR="cyan"
          fi
          
          sed -i "3s|.*|![Backend Coverage](https://img.shields.io/badge/Backend%20Coverage-${BACKEND_COVERAGE}%25-${BACKEND_COLOR})|" README.md
          sed -i "4s|.*|![Frontend Coverage](https://img.shields.io/badge/Frontend%20Coverage-${FRONTEND_COVERAGE}%25-${FRONTEND_COLOR})|" README.md

      - name: Commit Updated README
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update coverage badges'
          file_pattern: 'README.md'
